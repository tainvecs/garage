name: APISRV Unit Tests


on:
  push:
    branches:
      - "apisrv/test-workflow"


defaults:
  run:
    working-directory: "apisrv"


permissions:
  contents: read


jobs:

  test:

    services:
      elasticsearch:
        image: elasticsearch:7.17.8
        env:
          discovery.type: single-node
        ports:
          - 9200:9200
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    strategy:
      matrix:
        go-version: [1.19.x]  # [1.18.x, 1.19.x]
        os: [ubuntu-latest]   # [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install Dependencies
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.50.1

      - name: Run Lint
        run: |
          golangci-lint run -E gofmt -E stylecheck -E gocritic --verbose --timeout=3m --out-format=github-actions

      - name: Run Unit Test
        env:
          TEST_REAL: "true"
          ES_URL: "http://0.0.0.0:9200"
          ES_UNIT_TEST_INDEX: "unit_test_v1"
          ES_UNIT_TEST_INDEX_ALIAS: "unit_test_index"
          ES_UNIT_TEST_SEARCH_ALIAS: "unit_test_search"
          ES_NEWS_DOC_INDEX: "news_docs_v1"
          ES_NEWS_DOC_INDEX_ALIAS: "news_docs_index"
          ES_NEWS_DOC_SEARCH_ALIAS: "news_docs_search"
          DATA_DIR: "$(realpath ./data)/"
        run: |
          env
          bash scripts/es-unit_test-set_up.sh
          bash scripts/es-news_category-set_up.sh
          go test -race -covermode=atomic -coverprofile=coverage.out ./...

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: apisrv
          fail_ci_if_error: true
          verbose: true
